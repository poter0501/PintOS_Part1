Kernel command line: -q run priority-fifo
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
Boot complete.
Executing 'priority-fifo':
(priority-fifo) begin
(priority-fifo) 16 threads will iterate 16 times in the same order each time.
(priority-fifo) If the order varies then there is a bug.
(priority-fifo) end
Execution of 'priority-fifo' complete.
Timer: 23 ticks
Thread: 0 idle ticks, 23 kernel ticks, 0 user ticks
Console: 557 characters output
Keyboard: 0 keys pressed
Powering off...
Kernel PANIC at ../../threads/thread.c:269 in thread_current(): assertion `t->status == THREAD_RUNNING' failed.
Call stack: 0x8004213405 0x8004206ed7 0x8004209f88 0x8004216493 0x80042165b1 0x8004210908 0x8004208a7d 0x80042088f1 0x8004208cd8 0x8004209900 0x8004209d55 0x80042164ca 0x80042165b1 0x8004210908 0x8004208a7d 0x80042088f1 0x8004208cd8 0x8004213c18 0x8004213cc0 0x8004209a5e 0x8004209f1f 0x8004218e87 0x8004207349.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 24 ticks
Thread: 0 idle ticks, 24 kernel ticks, 0 user ticks
Console: 1