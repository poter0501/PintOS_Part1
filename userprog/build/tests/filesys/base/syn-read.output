Kernel command line: -q -f put syn-read put child-syn-read run syn-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 313 sector (156 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 225 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
child-syn-read: exit(0)
(syn-read) exec child 1 of 10: "child-syn-read 0"
child-syn-read: exit(1)
(syn-read) exec child 2 of 10: "child-syn-read 1"
child-syn-read: exit(2)
(syn-read) exec child 3 of 10: "child-syn-read 2"
child-syn-read: exit(3)
(syn-read) exec child 4 of 10: "child-syn-read 3"
child-syn-read: exit(4)
(syn-read) exec child 5 of 10: "child-syn-read 4"
child-syn-read: exit(5)
(syn-read) exec child 6 of 10: "child-syn-read 5"
child-syn-read: exit(6)
(syn-read) exec child 7 of 10: "child-syn-read 6"
child-syn-read: exit(7)
(syn-read) exec child 8 of 10: "child-syn-read 7"
child-syn-read: exit(8)
(syn-read) exec child 9 of 10: "child-syn-read 8"
child-syn-read: exit(9)
(syn-read) exec child 10 of 10: "child-syn-read 9"
Interrupt 0x0d (#GP General Protection Exception) at rip=800421c4ca
 cr2=0000000000000000 error=               0
rax cccccccccccccb84 rbx 0000000000000000 rcx 0000008004246000 rdx 0000000000000020
rsp 0000008004240e80 rbp 0000008004240eb0 rsi 000000004747fed8 rdi 0000008004240158
rip 000000800421c4ca r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000216 r12 000000800421ce6b r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000286
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004217ee4 0x800421cc40 0x8004208ff9 0x8004209417 0x800421baf2 0x800421d543 0x800421cf65 0x800421cd94 0x4007b9 0x4002be 0x400fa7 0x400ff0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 268 ticks
Thread: 30 idle ticks, 50 kernel ticks, 188 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 10987 reads, 504 writes
hd1:0: 225 reads, 0 writes
Console: 2606 characters output
Key